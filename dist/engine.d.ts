import { Storage } from "./types";
import { ethers } from "ethers";
import { Price } from "./services/price";
import { Resource } from "./services/resource";
import { BnA } from "./services/balanceAndAllowance";
import { UniV2Pair } from "./services/uniV2Pair";
import { History } from "./services/history";
import { Swap } from "./services/swap";
import { CurrentPool, PoolData } from "./services/currentPool";
type ConfigType = {
    chainId: number;
    scanApi: string;
    rpcUrl: string;
    signer?: ethers.providers.JsonRpcSigner;
    provider: ethers.providers.Provider;
    providerToGetLog: ethers.providers.Provider;
    account?: string;
    storage?: Storage;
};
export declare class Engine {
    chainId: number;
    scanApi: string;
    rpcUrl: string;
    account?: string;
    signer?: ethers.providers.JsonRpcSigner;
    provider: ethers.providers.Provider;
    providerToGetLog: ethers.providers.Provider;
    storage?: Storage;
    PRICE: Price;
    RESOURCE: Resource;
    BNA: BnA;
    UNIV2PAIR: UniV2Pair;
    HISTORY: History;
    SWAP: Swap;
    CURRENT_POOL: CurrentPool;
    currentPoolAddress: string;
    constructor(configs: ConfigType);
    initServices(): void;
    setCurrentPool(poolData: PoolData): void;
}
export {};
